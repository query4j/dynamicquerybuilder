name: CI

on:
  push:
    branches:
      - master
      - develop
      - 'release/**'
  pull_request:
    branches:
      - master
      - develop

jobs:
  build-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    permissions:
      contents: read

    strategy:
      matrix:
        java-version: [17, 21]
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java-version }}
          cache: 'gradle'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build all modules
        run: ./gradlew clean build -x test

      - name: Run unit tests
        run: ./gradlew test

      - name: Run integration tests
        run: ./gradlew integrationTest || echo "No integration tests configured"
        continue-on-error: true

      - name: Generate coverage report
        if: matrix.java-version == '17'
        run: ./gradlew jacocoRootReport

      - name: Verify coverage thresholds
        if: matrix.java-version == '17'
        run: ./gradlew jacocoRootCoverageVerification

      - name: Upload coverage to Codecov
        if: matrix.java-version == '17'
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./build/reports/jacoco/jacocoRootReport/jacocoRootReport.xml

      - name: Archive test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports-jdk${{ matrix.java-version }}
          path: |
            **/build/reports/tests/test/
            build/reports/jacoco/jacocoRootReport/
          retention-days: 30

      - name: Archive build artifacts
        if: success() && matrix.java-version == '17'
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            **/build/libs/*.jar
            !**/build/libs/*-plain.jar
          retention-days: 7

  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest
    needs: build-test
    
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Run Checkstyle
        run: ./gradlew checkstyleMain checkstyleTest || echo "Checkstyle not configured"
        continue-on-error: true

      - name: Run SpotBugs
        run: ./gradlew spotbugsMain || echo "SpotBugs not configured"
        continue-on-error: true

      - name: Run PMD
        run: ./gradlew pmdMain || echo "PMD not configured"
        continue-on-error: true

  benchmarks:
    name: Performance Benchmarks
    runs-on: ubuntu-latest
    needs: build-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Build benchmark JAR
        run: ./gradlew benchmark:benchmarkJar

      - name: Run benchmarks (quick mode)
        run: |
          cd benchmark
          java -jar build/libs/benchmarks-*.jar -wi 2 -i 3 -f 1 -rf json -rff ../benchmark-results.json || true

      - name: Upload benchmark results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results-${{ github.run_number }}
          path: benchmark-results.json
          retention-days: 90

      - name: Archive benchmark JAR
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-jar-${{ github.run_number }}
          path: benchmark/build/libs/benchmarks-*.jar
          retention-days: 30